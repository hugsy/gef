name: CI Coverage

on: [pull_request]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run test coverage
      id: get-coverage
      env:
        ALLOWED_MARGIN: 0.01
        MIN_COVERAGE: 70
      run: |
        sudo apt-get update
        sudo apt-get install -y gdb-multiarch python3-dev python3-pip python3-wheel python3-setuptools git cmake gcc g++ pkg-config libglib2.0-dev gdbserver qemu-user
        sudo python3 -m pip install --upgrade pip
        echo PY_VER=`gdb -q -nx -ex "pi print('.'.join(map(str, sys.version_info[:2])))" -ex quit` >> $GITHUB_ENV
        echo GEF_CI_NB_CPU=`grep -c ^processor /proc/cpuinfo` >> $GITHUB_ENV
        echo GEF_CI_ARCH=`uname --processor` >> $GITHUB_ENV
        python${{ env.PY_VER }} -m pip install --user --upgrade -r tests/requirements.txt
        current_score=$(curl --silent https://hugsy.github.io/gef/coverage/gef_py.html | grep pc_cov | sed 's?.*<span class="pc_cov">\([^%]*\)%</span>?\1?g')
        bash scripts/generate-coverage-docs.sh
        new_score=$(cat docs/coverage/gef_py.html | grep pc_cov | sed 's?.*<span class="pc_cov">\([^%]*\)%</span>?\1?g')
        commit=$(git rev-parse HEAD)
        cat > /tmp/msg << EOF
        Commit:${commit}
        New coverage score: ${new_score}%
        Current score: ${current_score}%
        EOF
        cat /tmp/msg
        echo "msg=\"$(cat /tmp/msg)\"" >> $GITHUB_OUTPUT

    - uses: actions/github-script@v6
      with:
        script: |
          github.rest.pulls.createComment({
            pull_number: context.pull.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: steps.get-coverage.outputs.msg
          })
